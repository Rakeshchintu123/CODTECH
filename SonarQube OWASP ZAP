name: SonarQube Analysis

on:
  push:
    branches: [ main ]

jobs:
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.0
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: 'http://your-sonarqube-server:9000'
name: OWASP ZAP Scan

on:
  workflow_dispatch:  # or after deploy

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Run ZAP Scan

    steps:
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://your-app-url.com'
name: CI/CD with Security Scanning

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm test

  sonarqube:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
      - uses: SonarSource/sonarqube-scan-action@v2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: 'http://your-sonarqube-server:9000'

  zap_scan:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://your-app-url.com'

